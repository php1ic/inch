version: 2.1

orbs:
  codecov: codecov/codecov@4.0.1
  coverage-reporter: codacy/coverage-reporter@13.15.1

commands:
  full_checkout:
    steps:
      - checkout
      - run:
          name: "Pull submodules"
          command: |
            git submodule sync
            git submodule update --init
  build_and_test:
    parameters:
      dir:
        default: build
        type: string
    steps:
      - run:
          name: "Build the binary"
          command: cmake --build <<parameters.dir>> -j 2
      - run:
          name: "Run the tests"
          command: cd <<parameters.dir>> && ctest -j2 -V

jobs:
  build_gcc_debug:
    docker:
      - image: cimg/base:current
    steps:
      - run:
          name: "Install required packages"
          command: sudo apt update && sudo apt install -y git cmake ninja-build lcov gcc g++
      - full_checkout
      - run:
          name: "Configure GCC debug build"
          command: cmake -GNinja -H. -B../Debug-build -DINCH_UNIT_TESTS=ON -DINCH_CODE_COVERAGE=ON -DCMAKE_CXX_COMPILER=/usr/bin/g++ -DCMAKE_BUILD_TYPE=Debug
      - build_and_test:
          dir: ../Debug-build
      - run:
          name: "Generate code coverage metrics"
          command: |
            cd ../Debug-build
            lcov --directory . --capture --gcov-tool /usr/bin/gcov --output-file coverage.info
            lcov --remove coverage.info '/usr/*' '*/tests/*' '*/external/*' --output-file coverage.info
            lcov --list coverage.info
      - codecov/upload:
          cli_args: '-v'
          file: ${HOME}/Debug-build/coverage.info
      - coverage-reporter/send_report:
          coverage-reports: '../Debug-build/coverage.info'
          project-token: $CODACY_PROJECT_TOKEN

  build_gcc_release:
    docker:
      - image: cimg/base:current
    steps:
      - run: sudo apt update && sudo apt install -y git cmake ninja-build gcc g++
      - full_checkout
      - run: cmake -GNinja -H. -B../Release-build -DINCH_UNIT_TESTS=ON -DCMAKE_CXX_COMPILER=/usr/bin/g++ -DCMAKE_BUILD_TYPE=Release
      - build_and_test:
          dir: ../Release-build

  build_clang_debug:
    docker:
      - image: cimg/base:current 
    steps:
      - run: sudo apt update && sudo apt install -y git cmake ninja-build clang-15 llvm
      - full_checkout
      - run: cmake -GNinja -H. -B../Debug-build -DINCH_UNIT_TESTS=ON -DCMAKE_CXX_COMPILER=/usr/bin/clang++-15 -DCMAKE_BUILD_TYPE=Debug
      - build_and_test:
          dir: ../Debug-build

  build_clang_release:
    docker:
      - image: cimg/base:current
    steps:
      - run: sudo apt update && sudo apt install -y git cmake ninja-build clang-15 llvm
      - full_checkout
      - run: cmake -GNinja -H. -B../Release-build -DINCH_UNIT_TESTS=ON -DCMAKE_CXX_COMPILER=/usr/bin/clang++-15 -DCMAKE_BUILD_TYPE=Release
      - build_and_test:
          dir: ../Release-build

workflows:
  version: 2.1
  build_and_test:
    jobs:
      - build_gcc_debug
      - build_gcc_release
      - build_clang_debug
      - build_clang_release
